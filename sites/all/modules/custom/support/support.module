<?php 

function support_simulador(){
  if(isset($_POST['cilindrada']) && $_POST['marca'] && $_POST['modelo'] && $_POST['ano']){
    $formulario = drupal_get_form('_support_simulador_componentes');
  }elseif(isset($_POST['pedir_orcamento'])){
    print "APRESENTAR AQUI O ORÇAMENTO COM OS COMPONENTES ESCOLHIDOS";
    return;
  }else{
    $formulario = drupal_get_form('support_simulador_formulario');
  }
  print render($formulario);
}

function _support_simulador_componentes(){
$display = 'panel_pane_1';
$view = views_get_view('orcamento');
$view->set_display($display);
$view->execute();
$response = $view->result;
$form = array();
$form['pedir_orcamento'] = array('#type' => 'hidden','#value' => true );
$cilindrada = $_POST['cilindrada'];
foreach ($response as $key2 => $value2) {
  $compativeis = $value2->_field_data['nid']['entity']->field_compativel[LANGUAGE_NONE];
  foreach ($compativeis as $key => $value) {
    //filtrar pela cilindrada selecionada
    if($value['tid'] == $cilindrada){
      $pacotes = $value2->_field_data['nid']['entity']->field_pacote_venda[LANGUAGE_NONE];
      $classes = array();
      //contruir a classe pelos pacotes
      foreach ($pacotes as $keyp => $valuep) {
        $classes[] = 'pacote_'.$valuep['tid'];
      }
      $form['nid_'.$value2->nid] = array(
               '#type' => 'checkbox',
               '#validated' => TRUE,
               '#attributes' => array(
                'class' => $classes,
              ),
               '#title' => $value2->node_title.' - '.$value2->field_field_preco[0]['rendered']['#markup'],
               '#default_value' => 0,
        );
      break;
    }
  }
}

$form['submit'] = array(
      '#type' => 'submit',
      '#value' => 'Gerar documento de orçamento',
     );
return $form;
}

function support_simulador_formulario(){
    //calcular o ano minimo de todos os modelos
    $min = 2000;
    $cilindrada = taxonomy_get_tree(4);
    foreach ($cilindrada as $key => $value) {
      $value = taxonomy_term_load($value->tid);
      if(isset($value->field_ano[LANGUAGE_NONE][0]['value']) && (intval($value->field_ano[LANGUAGE_NONE][0]['value']) < $min)){
        $min = $value->field_ano[LANGUAGE_NONE][0]['value'];
      }
    }
    $anos = range ( date('Y')+1, $min, -1);
    $anos[0] = 'Ano';
    $form['#prefix'] = '<div id="formulario_simulador">';
    $form['#suffix'] = '</div>';
    $form['ano'] = array(
      '#prefix' => '<div id="select_ano">',
            '#suffix' => '</div>',
           '#type' => 'select',
           '#validated' => TRUE,
           '#title' => 'Ano',
           '#options' => $anos,
           '#required' => TRUE,
           '#default_value' => 0,
            '#ajax' => array(
            'callback' => '_support_simulador_select_marca',
            'wrapper' => 'select_marca',
            )
    );
    $form['marca'] = array(
           '#type' => 'select',
           '#validated' => TRUE,
           '#required' => TRUE,
           '#title' => 'Marca',
           '#options' => array(
                0 => ' --- '
            ),
           '#default_value' => 0,
           '#prefix' => '<div id="select_marca">',
            '#suffix' => '</div>',
             '#ajax' => array(
            'callback' => '_support_simulador_select_modelo',
            'wrapper' => 'select_modelo',
            )
    );
    $form['modelo'] = array(
           '#type' => 'select',
           '#validated' => TRUE,
           '#required' => TRUE,
           '#title' => 'Modelo',
           '#options' => array(
                0 => ' --- '
            ),
           '#default_value' => 0,
           '#prefix' => '<div id="select_modelo">',
            '#suffix' => '</div>',
            '#ajax' => array(
            'callback' => '_support_simulador_select_cilindrada',
            'wrapper' => 'select_cilindrada',
            )
    );
    $form['cilindrada'] = array(
      '#type' => 'select',
      '#required' => TRUE,
      '#validated' => TRUE,
      '#title' => 'Cilindrada',
      '#options' => array(
        0 => ' --- '
      ),
      '#default_value' => 0,
      '#prefix' => '<div id="select_cilindrada">',
      '#suffix' => '</div>',
    );
    $form['submit'] = array(
      '#type' => 'submit',
      '#value' => '',
      '#prefix' => '<div id="submit_simul_div">',
      '#suffix' => '</div>',
      '#ajax' => array(
        'callback' => 'support_simulador_formulario_callback',
        'wrapper' => 'support-simulador-formulario'
        )
	   );
    return $form;
}

//submit callback
function support_simulador_formulario_callback($form, &$form_state) {
  $commands = array();
  $commands[] = ajax_command_remove('.simulador_validate'); 
  if($form_state['values']['ano'] && $form_state['values']['marca'] && $form_state['values']['modelo'] && $form_state['values']['cilindrada']){
    $commands[] = ajax_command_invoke('#support-simulador-formulario', 'submit');
    return array('#type' => 'ajax', '#commands' => $commands);
  }
  $msg = '<div class="simulador_validate">Campo obrigatório</div>';
  if(!$form_state['values']['ano'])
    $commands[] = ajax_command_after('#select_ano', $msg);
  if(!$form_state['values']['marca'])
    $commands[] = ajax_command_after('#select_marca', $msg);
  if(!$form_state['values']['modelo'])
    $commands[] = ajax_command_after('#select_modelo', $msg);
  if(!$form_state['values']['cilindrada'])
    $commands[] = ajax_command_after('#select_cilindrada', $msg);
 return array('#type' => 'ajax', '#commands' => $commands);
}

//callbacks dos selects
function _support_simulador_select_marca($form, $form_state){
  $commands = array();
  $commands[] = ajax_command_remove('.simulador_validate'); 
  $ano = $form_state['values']['ano'];
  $form['marca']['#options'] = array(
                0 => ' --- '
            );
  $form['modelo']['#options'] = array(
                0 => ' --- '
            );
  $form['cilindrada']['#options'] = array(
                0 => ' --- '
                );
  if($ano){
    $ano = date('Y') - $ano;
    $marcas = _support_marcasPorAno($ano);
    $marcas[0] = 'Marca';
    ksort($marcas);
    $form['marca']['#options'] = $marcas;
    $form['marca']['#value'] = 0;
  }
  $commands[] = ajax_command_replace('#select_marca', drupal_render($form['marca']));
  $commands[] = ajax_command_replace('#select_modelo', drupal_render($form['modelo']));
  $commands[] = ajax_command_replace('#select_cilindrada', drupal_render($form['cilindrada']));
  return array('#type' => 'ajax', '#commands' => $commands);
}

function _support_simulador_select_modelo($form, $form_state){
  $commands = array();
  $commands[] = ajax_command_remove('.simulador_validate'); 
  $ano = $form_state['values']['ano'];
  $marca = $form_state['values']['marca'];
  $form['modelo']['#options'] = array(
                0 => ' --- '
            );
  $form['cilindrada']['#options'] = array(
                0 => ' --- '
            );
  if($ano && $marca){
    $ano = date('Y') - $ano;
    $modelos = _support_modelosPorMarcaAno($marca,$ano);
    $modelos[0] = 'Modelo';
    ksort($modelos);
    $form['modelo']['#options'] = $modelos;
    $form['modelo']['#value'] = 0;
  }
  
  $commands[] = ajax_command_replace('#select_modelo', drupal_render($form['modelo']));
  $commands[] = ajax_command_replace('#select_cilindrada', drupal_render($form['cilindrada']));
  return array('#type' => 'ajax', '#commands' => $commands);
}

function _support_simulador_select_cilindrada($form, $form_state){
  $commands = array();
  $commands[] = ajax_command_remove('.simulador_validate'); 
  $modelo = $form_state['values']['modelo'];
  $form['cilindrada']['#options'] = array(
                0 => ' --- '
            );
  $ano = $form_state['values']['ano'];
  if($ano && $modelo){
    $ano = date('Y') - $ano;
    $cilindrada = _support_cilindradaPorModelo($modelo,$ano);
    $cilindrada[0] = 'Cilindrada';
    ksort($cilindrada);
    $form['cilindrada']['#options'] = $cilindrada;
    $form['cilindrada']['#value'] = 0;
  }
  
  $commands[] = ajax_command_replace('#select_cilindrada', drupal_render($form['cilindrada']));
    return array('#type' => 'ajax', '#commands' => $commands);
}

//auxiliares dos callbacks
function _support_marcasPorAno($ano){
  $array_return = $array_return_treated = array();
  $taxonomy = taxonomy_get_tree(4);
  foreach ($taxonomy as $key => $value) {
    if($value->depth == 1){
      $parent = $value->parents[0];
      $value_loaded = taxonomy_term_load($value->tid);
      if(isset($value_loaded->field_ano[LANGUAGE_NONE][0]['value']) && (intval($value_loaded->field_ano[LANGUAGE_NONE][0]['value']) <= $ano)){
        $array_return[$parent] = $parent;
      }
    }
  }
  foreach ($array_return as $key => $value) {
    $marca = taxonomy_term_load($value);
    $array_return_treated[$value] = $marca->name;
  }
  return $array_return_treated;
}


function _support_modelosPorMarcaAno($marca,$ano){
  $array_return = $array_return_treated = array();
  $taxonomy = taxonomy_get_tree(4,$marca);
  foreach ($taxonomy as $key => $value) {
     if($value->depth == 0){
    $value = taxonomy_term_load($value->tid);
    if(isset($value->field_ano[LANGUAGE_NONE][0]['value']) && (intval($value->field_ano[LANGUAGE_NONE][0]['value']) <= $ano)){
      $array_return[$value->tid] = $value->name;
    }
  }
  }
  
  return $array_return;
}

function _support_cilindradaPorModelo($modelo,$ano){
  $array_return = $array_return_treated = array();
  $taxonomy = taxonomy_get_tree(4,$modelo);
  foreach ($taxonomy as $key => $value) {
    $value = taxonomy_term_load($value->tid);
    if(isset($value->field_ano[LANGUAGE_NONE][0]['value']) && (intval($value->field_ano[LANGUAGE_NONE][0]['value']) <= $ano)){
      $array_return[$value->tid] = $value->name;
    }elseif(!isset($value->field_ano[LANGUAGE_NONE][0]['value'])){
      $array_return[$value->tid] = $value->name;
    }
  }
  
  return $array_return;
}

function support_filterComponentesOrcamento($data){

}

